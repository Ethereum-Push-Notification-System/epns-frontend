<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog</id>
    <title>Push | The Communication Protocol of Web3 Blog</title>
    <updated>2024-12-09T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog"/>
    <subtitle>Push | The Communication Protocol of Web3 Blog</subtitle>
    <icon>https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/website/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Consumer Apps 🫶🏽 Push Chain - Innovations that can be built on Push Chain]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Consumer Apps 🫶🏽 Push Chain - Innovations that can be built on Push Chain]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of Consumer Apps 🫶🏽 Push Chain - Innovations that can be built on Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>
<p>Blockchain technology has transformed the way we interact digitally, but its current ecosystem faces significant challenges in scalability, usability, and accessibility, particularly for consumer-focused applications. Push Chain emerges as a cutting-edge Proof-of-Stake blockchain, purpose-built to bridge fragmented web3 ecosystems and deliver hyper-scalable and user-friendly universal applications. In this article, we delve into the evolution of the Push Chain, its phased development roadmap, and the innovative applications it empowers.</p>
<p><img loading="lazy" alt="First Image of Consumer Apps 🫶🏽 Push Chain - Innovations that can be built on Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image1-628d893fa9d908783f3959055d76cbc3.webp" width="768" height="403" class="img_ev3q"></p>
<p>Push Protocol initially emerged to address a communication gap in web3. By introducing real-time notifications and decentralized chat, Push Protocol became the communication backbone for projects like Uniswap, Lens Protocol, and Snapshot. Over time, Push extended its mission to simplify user and developer experiences (UX and DevX) in web3.</p>
<p><img loading="lazy" alt="Second Image of Consumer Apps 🫶🏽 Push Chain - Innovations that can be built on Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image2-21445421e4eb3d20630f71d544dd19ee.webp" width="3672" height="660" class="img_ev3q"></p>
<p>Despite these advances, core web3 limitations remained: scalability, fragmented ecosystems, and a lack of shared execution layers. These challenges inspired the evolution of Push Protocol into <strong>Push Chain</strong>, a shared-state blockchain aimed at solving these systemic issues.</p>
<h1>Meet Push Chain</h1>
<p>Push Chain is a next-generation blockchain designed to overcome the limitations of today’s web3 ecosystem by enabling seamless, scalable, and user-friendly applications for both developers and end-users. Unlike traditional blockchains, which often prioritize financial use cases, Push Chain is built to support a wide range of consumer and mixed-use applications, from social platforms to decentralized gaming and beyond.</p>
<p>Push Chain unifies fragmented blockchain ecosystems, allowing transactions and interactions across multiple chains without compromising user experience. By introducing advanced features like wallet and fee abstraction, dynamic sharding, and universal smart contracts, Push Chain ensures developers can focus on building applications. At the same time, users enjoy intuitive, chain-agnostic access.</p>
<p>Push Chain’s mission is to redefine web3 by making it as accessible and seamless as today’s web2 experiences, without sacrificing the core values of blockchain technology—decentralization, security, and transparency. Whether you’re building the next social app, DeFi platform, or gaming experience, Push Chain provides the infrastructure to make it happen.</p>
<h1>Push Chain Roadmap: Phases 1, 2 and 3</h1>
<p>Push Chain’s development follows a phased approach:</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="phase-1">Phase 1<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#phase-1" class="hash-link" aria-label="Direct link to Phase 1" title="Direct link to Phase 1">​</a></h2>
<p><strong>Phase 1</strong> focuses on creating an infrastructure tailored for consumer-centric applications, offering true scalability and seamless integration. This phase enables transactions from any chain, a virtual machine, consumer transactions (ordering is not important), fees and wallet abstraction, and email/social login.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="phase-2">Phase 2<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#phase-2" class="hash-link" aria-label="Direct link to Phase 2" title="Direct link to Phase 2">​</a></h2>
<p><strong>Phase 2</strong> focuses on establishing seamless interoperability between blockchains, enabling instant cross-chain transactions and the transfer of value and smart contract calls. This phase introduces a solver network designed to enhance user experience by abstracting on-chain complexities. By facilitating hyper-scalable and universal applications, Phase 2 paves the way for scalable apps with improved usability and accessibility for all users.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="phase-3">Phase 3<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#phase-3" class="hash-link" aria-label="Direct link to Phase 3" title="Direct link to Phase 3">​</a></h2>
<p><strong>Phase 3</strong> introduces shared state and universal smart contracts, enabling seamless cross-blockchain interactions. By granting Push Chain access to its own and other chains’ data and mapping user wallets with Push ID, developers can build applications that serve users without concern for blockchain specifics. This phase abstracts complexities, allowing users to interact with apps like Uniswap for their features alone in a chain-agnostic manner.</p>
<h1><strong>Applications That Can Be Built on Push Chain</strong></h1>
<p>Push Chain’s architecture is specifically designed to enable developers to create universal, consumer-friendly applications. These applications span various domains, leveraging the blockchain’s ability to handle both financial and non-financial use cases with ease. Below is an expanded look at the diverse range of applications that can thrive on Push Chain.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="social-applications"><strong>Social Applications</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#social-applications" class="hash-link" aria-label="Direct link to social-applications" title="Direct link to social-applications">​</a></h2>
<p>Push Chain’s scalability, fee, and wallet abstraction make it ideal for creating decentralized social platforms. These applications can replicate or improve upon popular web2 platforms while leveraging the benefits of blockchain technology:</p>
<ul>
<li><strong>Decentralized Social Media Platforms</strong>: Build the next-generation Reddit, Twitter, or TikTok with censorship resistance and token-based incentives for content creators.</li>
<li><strong>Community Spaces</strong>: Enable decentralized group chats, forums, or live audio/video spaces where participants can connect without relying on centralized platforms.</li>
<li><strong>Social Rewards Apps</strong>: Create apps where users earn rewards for engagement, such as likes, shares, or creating valuable content.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="financial-applications"><strong>Financial Applications</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#financial-applications" class="hash-link" aria-label="Direct link to financial-applications" title="Direct link to financial-applications">​</a></h2>
<p>While Push Chain isn’t solely focused on DeFi, it supports <strong>financial applications</strong> with universal capabilities:</p>
<ul>
<li><strong>Unified Decentralized Exchanges (DEXs)</strong>: Develop DEXs that allow seamless token trading across multiple blockchains.</li>
<li><strong>Cross-Chain Lending and Borrowing</strong>: Create DeFi platforms that connect liquidity from different blockchains, offering users better rates and higher liquidity.</li>
<li><strong>Global Payment Systems</strong>: Build payment gateways where users can transact with minimal fees using tokens from any blockchain.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="marketplace-applications"><strong>Marketplace Applications</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#marketplace-applications" class="hash-link" aria-label="Direct link to marketplace-applications" title="Direct link to marketplace-applications">​</a></h2>
<p>Push Chain’s shared state and universal app capabilities simplify the creation of <strong>marketplaces</strong>:</p>
<ul>
<li><strong>NFT Marketplaces</strong>: Design platforms where NFTs from any blockchain can be traded seamlessly, eliminating the need for bridging solutions.</li>
<li><strong>Global E-Commerce</strong>: Build decentralized marketplaces that support cross-chain payments.</li>
<li><strong>Tokenized Asset Trading</strong>: Create platforms for trading tokenized assets like real estate, art, or collectibles across multiple blockchain ecosystems.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="decentralized-identity-and-profiles"><strong>Decentralized Identity and Profiles</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#decentralized-identity-and-profiles" class="hash-link" aria-label="Direct link to decentralized-identity-and-profiles" title="Direct link to decentralized-identity-and-profiles">​</a></h2>
<p>Push Chain’s unified user model makes it a strong foundation for <strong>identity solutions</strong>:</p>
<ul>
<li><strong>Decentralized Profiles</strong>: Enable users to create and manage blockchain-based profiles that integrate their activity across multiple chains.</li>
<li><strong>Reputation Systems</strong>: Build decentralized reputation systems where users earn credibility based on their interactions and contributions across multiple blockchains.</li>
<li><strong>Credential Verification</strong>: Develop systems for verifying user credentials, such as educational qualifications or employment history, securely on any blockchain.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cross-chain-analytics-and-portfolio-management"><strong>Cross-Chain Analytics and Portfolio Management</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#cross-chain-analytics-and-portfolio-management" class="hash-link" aria-label="Direct link to cross-chain-analytics-and-portfolio-management" title="Direct link to cross-chain-analytics-and-portfolio-management">​</a></h2>
<p>Push Chain’s interoperability and shared state enable powerful <strong>analytics and management tools</strong>:</p>
<ul>
<li><strong>Unified Web3 Portfolios</strong>: Develop apps that allow users to manage and track their token holdings, NFT collections, and DeFi positions across multiple blockchains in one interface.</li>
<li><strong>Analytics and Recommendations</strong>: Build analytics platforms that provide insights into user behavior, enabling personalized recommendations or investment advice.</li>
<li><strong>Cross-Chain Governance Dashboards</strong>: Aggregate DAO governance activities across chains, providing users with a unified voting and proposal management system.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="utility-and-productivity-applications"><strong>Utility and Productivity Applications</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#utility-and-productivity-applications" class="hash-link" aria-label="Direct link to utility-and-productivity-applications" title="Direct link to utility-and-productivity-applications">​</a></h2>
<p>Push Chain enables <strong>utility applications</strong> that simplify and enhance everyday tasks:</p>
<ul>
<li><strong>Decentralized Email and Messaging</strong>: Build secure, blockchain-based email services where users communicate using their wallet addresses or Push IDs.</li>
<li><strong>Web3 Blogging and Content Platforms</strong>: Create decentralized blogging platforms where users can publish, share, and monetize content without relying on centralized hosts.</li>
<li><strong>Data Storage and Retrieval</strong>: Build applications for storing user settings, metadata, or application states, enabling decentralized profiles and preferences.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="education-and-training-platforms"><strong>Education and Training Platforms</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/consumer-apps-that-can-be-built-on-push-chain#education-and-training-platforms" class="hash-link" aria-label="Direct link to education-and-training-platforms" title="Direct link to education-and-training-platforms">​</a></h2>
<p>Push Chain supports <strong>decentralized education platforms</strong> that enhance learning experiences.</p>
<ul>
<li><strong>Credential Management</strong>: Verify and share academic achievements securely on the blockchain.</li>
<li><strong>Incentivized Learning Platforms</strong>: Reward users with tokens for completing courses or achieving milestones.</li>
<li><strong>Decentralized Knowledge Sharing</strong>: Develop platforms where users can share and monetize expertise in a peer-to-peer manner.</li>
</ul>
<h1>Conclusion</h1>
<p>Push Chain is redefining the future of blockchain by creating a unified, scalable ecosystem that empowers developers and simplifies user experiences. With its innovative features like cross-chain interoperability, shared state, and universal smart contracts, Push Chain enables diverse applications, from decentralized social platforms to global marketplaces, to thrive. By abstracting complexities and focusing on usability, it sets the stage for a seamless, interconnected web3 where applications are accessible to everyone, regardless of technical expertise or blockchain ecosystem.</p>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Consumer Apps" term="Consumer Apps"/>
        <category label="Universal Apps" term="Universal Apps"/>
        <category label="Shared App Experience" term="Shared App Experience"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A brief history of Push and it’s evolution to chaining]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/evolution-of-push-chain</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/evolution-of-push-chain"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A brief history of Push and it’s evolution to chaining]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of A brief history of Push and it’s evolution to chaining" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Shared App Experience" term="Shared App Experience"/>
        <category label="Shared State Blockchain" term="Shared State Blockchain"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Push Chain’s Frequently Asked Questions]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/faq-push-chain</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/faq-push-chain"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Push Chain’s Frequently Asked Questions]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of Push Chain’s Frequently Asked Questions" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Push Chain FAQ" term="Push Chain FAQ"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is Push Chain Another L1?]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/is-push-chain-another-layer-1</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/is-push-chain-another-layer-1"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Is Push Chain Another L1?]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of Is Push Chain Another L1?" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Shared State Blockchain" term="Shared State Blockchain"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Benchmarking Push Chain Nodes : Scaling with Validator Nodes]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/parallel-validators-and-dynamic-sharding</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/parallel-validators-and-dynamic-sharding"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Benchmarking Push Chain Nodes : Scaling with Validator Nodes]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of Benchmarking Push Chain Nodes : Scaling with Validator Nodes" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="introduction">Introduction<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/parallel-validators-and-dynamic-sharding#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h3>
<p>The Push Chain Network, a Proof-of-Stake (PoS) blockchain designed for consumer-centric applications, offers an innovative approach to scalability and usability in the decentralized space. By leveraging features like dynamic sharding, parallel block execution, and true scale, Push Chain promises a seamless environment for universal applications. This blog explores the benchmarking results of Push Chain under varying node configurations, providing insights into how the network behaves and scales as the number of nodes increases.</p>
<hr>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="node-types-and-roles"><strong>Node Types and Roles</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/parallel-validators-and-dynamic-sharding#node-types-and-roles" class="hash-link" aria-label="Direct link to node-types-and-roles" title="Direct link to node-types-and-roles">​</a></h3>
<ul>
<li><strong>Validator Nodes:</strong> Responsible for handling transaction validation and serving as the primary interface for client interactions.</li>
<li><strong>Storage Nodes:</strong> Tasked with storing validated transactions in a sharded manner for optimized data access and storage efficiency.</li>
<li><strong>Archival Nodes:</strong> Maintain a comprehensive record of all network transactions, enabling historical data access and providing support for applications like blockchain explorers.</li>
</ul>
<blockquote>
<p>💡 Note: While the roles described above provide a high-level overview, nodes in the Push Chain Network perform significantly more complex tasks, including dynamic sharding, transaction propagation, and ensuring data consistency across the network.</p>
</blockquote>
<hr>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="benchmarking-setup"><strong>Benchmarking Setup</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/parallel-validators-and-dynamic-sharding#benchmarking-setup" class="hash-link" aria-label="Direct link to benchmarking-setup" title="Direct link to benchmarking-setup">​</a></h3>
<p>The benchmarking tests were conducted in controlled environments with different node configurations:</p>
<p><strong>Environment Configurations</strong></p>
<ol>
<li><strong>Configuration 1</strong>:<!-- -->
<ul>
<li><strong>5 Validator Nodes</strong>, <strong>8 Storage Nodes</strong>, <strong>5 Archival Nodes</strong>.</li>
<li><strong>2 CPU cores</strong> allocated.</li>
</ul>
</li>
<li><strong>Configuration 2</strong>:<!-- -->
<ul>
<li><strong>10 Validator Nodes</strong>, <strong>8 Storage Nodes</strong>, <strong>5 Archival Nodes</strong>.</li>
<li><strong>4 CPU cores</strong> allocated.</li>
</ul>
</li>
<li><strong>Configuration 3</strong>:<!-- -->
<ul>
<li><strong>20 Validator Nodes</strong>, <strong>8 Storage Nodes</strong>, <strong>5 Archival Nodes</strong>.</li>
<li><strong>8 CPU cores</strong> allocated.</li>
</ul>
</li>
</ol>
<p>The benchmarks primarily evaluate the performance of the <strong>validator nodes</strong>, which serve as the gateway for client interactions. However, since validator nodes interact with storage nodes and archival nodes internally, the results effectively reflect the performance of the entire network.</p>
<blockquote>
<p>⚡ <strong>Note on</strong> <strong>Controlled Environment:</strong> All of these benchmarks were performed in a controlled internal network environment. As a result, any network lags or latency typically observed in real-world public networks were kept to a minimum, ensuring that the results reflect the network’s inherent capabilities rather than external factors. This setup allows for more accurate measurement of the Push Chain Network’s performance under varying configurations without the interference of significant network delays.</p>
</blockquote>
<blockquote>
<p>📊 <strong>Note on CPU Scaling:</strong> In order to simulate a decentralized network more realistically, the number of CPU cores allocated scales proportionally with the number of nodes. For instance, 2 CPU cores are allocated for 5 validator nodes, 4 CPU cores for 10 nodes, and 8 CPU cores for 20 nodes. This approach mirrors how resources would likely be distributed in a decentralized system, where each node operator contributes computational resources to the network.</p>
</blockquote>
<blockquote>
<p>⚙️ <strong>Note on Node Configuration:</strong> For simplicity and consistency, the number of <strong>Storage Nodes</strong> and <strong>Archival Nodes</strong> is kept constant at <strong>8</strong> and <strong>5</strong>, respectively, across all configurations. This ensures that the focus remains on evaluating the performance of the <strong>Validator Nodes</strong> and their interactions with the network, without introducing additional variables.</p>
</blockquote>
<p>The benchmarks primarily evaluate the performance of the <strong>validator nodes</strong>, which serve as the gateway for client interactions. However, since validator nodes interact with storage nodes and archival nodes internally, the results effectively reflect the performance of the entire network.</p>
<hr>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="benchmark-results"><strong>Benchmark Results</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/parallel-validators-and-dynamic-sharding#benchmark-results" class="hash-link" aria-label="Direct link to benchmark-results" title="Direct link to benchmark-results">​</a></h3>
<p>The following tests were conducted to measure the performance of the Push Chain Network under varying configurations, focusing on the behavior of <strong>validator nodes</strong> as the number of nodes increases. Each test was performed using multiple parallel threads, simulating real-world scenarios where multiple users interact with the network simultaneously.</p>
<p><strong>1. Ping Validator Test</strong></p>
<p>This test measures the round-trip time taken by multiple threads to select and ping a random validator node, simulating basic connectivity under increasing load.</p>
<table><thead><tr><th><strong>Threads</strong></th><th><strong>Configuration 1</strong></th><th><strong>Configuration 2</strong></th><th><strong>Configuration 3</strong></th></tr></thead><tbody><tr><td>10</td><td>21.72 ms</td><td>27.96 ms</td><td>26.43 ms</td></tr><tr><td>50</td><td>296.98 ms</td><td>94.45 ms</td><td>124.54 ms</td></tr><tr><td>100</td><td>371.32 ms</td><td>137.20 ms</td><td>151.44 ms</td></tr><tr><td>250</td><td>396.70 ms</td><td>232.06 ms</td><td>209.23 ms</td></tr><tr><td>500</td><td>497.69 ms</td><td>342.74 ms</td><td>287.24 ms</td></tr><tr><td>1000</td><td>785.19 ms</td><td>705.11 ms</td><td>545.10 ms</td></tr><tr><td>2000</td><td>1498.14 ms</td><td>1245.16 ms</td><td>1085.70 ms</td></tr><tr><td>5000</td><td>5608.33 ms</td><td>3637.42 ms</td><td>3297.24 ms</td></tr><tr><td>10000</td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td></tr></tbody></table>
<p><strong>Observations:</strong></p>
<ul>
<li>As the number of validator nodes increases, the network handles higher traffic more efficiently, as seen in <strong>Configuration 3</strong>, which consistently shows the lowest response times across all thread counts.</li>
<li>Traffic is split among more validator nodes in configurations with higher node counts, reducing the load on individual nodes and improving overall response times.</li>
<li>At <strong>10,000 threads</strong>, all configurations errored out, indicating the upper limit of the network under the current setup. However, <strong>Configuration 3</strong> demonstrated the highest capacity before encountering errors, highlighting the benefits of increased validator nodes for scalability.</li>
</ul>
<p><strong>2. Get Token Validator Test</strong></p>
<p>This test measures the time taken for multiple threads to request an access token from a random validator node. Access tokens are essential for sending transactions and performing other write operations on the network.</p>
<table><thead><tr><th><strong>Threads</strong></th><th><strong>Configuration 1</strong></th><th><strong>Configuration 2</strong></th><th><strong>Configuration 3</strong></th></tr></thead><tbody><tr><td>10</td><td>250.46 ms</td><td>253.37 ms</td><td>170.53 ms</td></tr><tr><td>50</td><td>969.38 ms</td><td>855.97 ms</td><td>427.89 ms</td></tr><tr><td>100</td><td>1540.05 ms</td><td>1294.32 ms</td><td>638.69 ms</td></tr><tr><td>250</td><td>2855.72 ms</td><td>2108.26 ms</td><td>1325.33 ms</td></tr><tr><td>500</td><td>4869.79 ms</td><td>3645.61 ms</td><td>3033.06 ms</td></tr><tr><td>1000</td><td>7850.41 ms</td><td>6541.31 ms</td><td>5036.91 ms</td></tr><tr><td>2000</td><td>21562.69 ms</td><td>12378.07 ms</td><td>7839.82 ms</td></tr><tr><td>5000</td><td>62539.38 ms</td><td>37642.91 ms</td><td>22250.88 ms</td></tr><tr><td>10000</td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td></tr></tbody></table>
<p><strong>Observations:</strong></p>
<ul>
<li>As the number of validator nodes increases, the network demonstrates significantly improved performance under higher thread counts. <strong>Configuration 3</strong> consistently shows the lowest response times, benefiting from better load distribution.</li>
<li>At lower thread counts (e.g., 10 or 50), the differences between configurations are minimal since the traffic does not fully utilize the network's capacity. However, at higher thread counts (e.g., 500 or more), <strong>Configuration 3</strong> outperforms the others due to its ability to handle a higher volume of concurrent requests.</li>
<li>At <strong>10,000 threads</strong>, all configurations errored out, indicating the network’s throughput limit under the current setup. However, <strong>Configuration 3</strong> reached significantly higher performance thresholds before encountering errors.</li>
</ul>
<p><strong>3. Send Transactions to Validator Test</strong></p>
<p>This test measures the time taken for multiple threads to send transactions to validator nodes. Each transaction submission involves the following steps:</p>
<ol>
<li>Retrieving an <strong>access token</strong> from a validator node.</li>
<li>Sending the transaction as an <strong>RPC request</strong> to the validator node using the retrieved token.</li>
</ol>
<p>Additionally, each transaction validation requires attestations from a subset of validator nodes.</p>
<blockquote>
<p>🔗 Note on Attestations: Each transaction validation includes attestations from N validator nodes, where N is a dynamic variable. For this test, N was kept constant at 4 to ensure consistent results.</p>
</blockquote>
<table><thead><tr><th><strong>Threads</strong></th><th><strong>Configuration 1</strong></th><th><strong>Configuration 2</strong></th><th><strong>Configuration 3</strong></th></tr></thead><tbody><tr><td>10</td><td>1052.11 ms</td><td>726.95 ms</td><td>481.58 ms</td></tr><tr><td>50</td><td>7059.86 ms</td><td>5783.53 ms</td><td>4866.28 ms</td></tr><tr><td>100</td><td>17140.02 ms</td><td>14252.35 ms</td><td>10992.26 ms</td></tr><tr><td>250</td><td><strong>Errored Out</strong></td><td>38932.29 ms</td><td>30432.74 ms</td></tr><tr><td>500</td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td></tr></tbody></table>
<p><strong>Observations:</strong></p>
<ul>
<li>The network’s performance improves with an increasing number of validator nodes, as seen in <strong>Configuration 3</strong>, which consistently shows the best results under higher thread counts.</li>
<li>At lower thread counts (e.g., 10 or 50), the differences between configurations are smaller due to minimal load. However, at higher thread counts, <strong>Configuration 3</strong> handles a significantly larger volume of transactions before encountering errors.</li>
<li>Errors such as timeouts occurred at <strong>250 threads</strong> for <strong>Configuration 1</strong> and <strong>500 threads</strong> for <strong>Configuration 2</strong>, highlighting the limits of these setups. <strong>Configuration 3</strong> demonstrated a higher capacity before reaching its threshold.</li>
</ul>
<p><strong>4. Get Transactions Test</strong></p>
<p>This test measures the time required for threads to retrieve transaction data of a particular blockchain address from validator nodes, simulating a typical query load where users request information about transactions. The process involves the following steps:</p>
<ol>
<li>The validator node determines the <strong>shard</strong> corresponding to the requested address.</li>
<li>The validator then identifies the <strong>storage nodes</strong> responsible for that shard and queries them for the transaction data.</li>
</ol>
<p>Since the number of storage nodes remains constant across configurations, the performance at higher thread counts is influenced by this dependency.</p>
<table><thead><tr><th><strong>Threads</strong></th><th><strong>Configuration 1</strong></th><th><strong>Configuration 2</strong></th><th><strong>Configuration 3</strong></th></tr></thead><tbody><tr><td>10</td><td>1727.71 ms</td><td>949.33 ms</td><td>1108.42 ms</td></tr><tr><td>50</td><td>2893.36 ms</td><td>2252.80 ms</td><td>1750.41 ms</td></tr><tr><td>100</td><td>4483.29 ms</td><td>3436.79 ms</td><td>2884.57 ms</td></tr><tr><td>250</td><td>10896.20 ms</td><td>8963.94 ms</td><td>8788.58 ms</td></tr><tr><td>500</td><td>28982.37 ms</td><td>15828.90 ms</td><td>15184.05 ms</td></tr><tr><td>1000</td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td></tr></tbody></table>
<p><strong>Observations:</strong></p>
<ul>
<li>With an increasing number of validator nodes, traffic is distributed more efficiently among the nodes, leading to better response times in <strong>Configuration 3</strong>, particularly under moderate thread counts (e.g., 50–250).</li>
<li>At lower thread counts (e.g., 10 or 50), the performance differences are less pronounced since the network does not experience significant load. However, as thread counts increase, <strong>Configuration 3</strong> handles requests more effectively due to its ability to distribute load better across a higher number of validator nodes.</li>
<li>Errors at <strong>1000 threads</strong> in all configurations highlight the scalability limitations imposed by the constant number of storage nodes. Increasing the number of storage nodes could improve performance at these higher thread counts.</li>
</ul>
<p><strong>5. Get Push ID Info Test</strong></p>
<p>This test measures the time required for threads to retrieve Push ID information from validator nodes for a given blockchain address, simulating a typical query load where users request mappings of Push IDs. The process involves the following steps:</p>
<ol>
<li>The validator node identifies the <strong>shard</strong> corresponding to the requested address or Push ID.</li>
<li>It then queries the <strong>storage nodes</strong> responsible for that shard to fetch the required data.</li>
</ol>
<p>As with other tests, the number of storage nodes remains constant, which impacts performance at higher thread counts.</p>
<table><thead><tr><th><strong>Threads</strong></th><th><strong>Configuration 1</strong></th><th><strong>Configuration 2</strong></th><th><strong>Configuration 3</strong></th></tr></thead><tbody><tr><td>10</td><td>1589.68 ms</td><td>1180.90 ms</td><td>1062.32 ms</td></tr><tr><td>50</td><td>1551.96 ms</td><td>1924.95 ms</td><td>1139.00 ms</td></tr><tr><td>100</td><td>3168.10 ms</td><td>2280.93 ms</td><td>2784.76 ms</td></tr><tr><td>250</td><td>6141.76 ms</td><td>5376.59 ms</td><td>5170.25 ms</td></tr><tr><td>500</td><td>13462.41 ms</td><td>10437.36 ms</td><td>8337.95 ms</td></tr><tr><td>1000</td><td>23817.09 ms</td><td>18082.24 <strong>ms</strong></td><td>15132.23 ms</td></tr><tr><td>2000</td><td>59157.55 ms</td><td>42868.81 ms</td><td>35978.39 ms</td></tr><tr><td>5000</td><td><strong>Errored Out</strong></td><td>104845.75 ms</td><td>77467.87 ms</td></tr><tr><td>10000</td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td><td><strong>Errored Out</strong></td></tr></tbody></table>
<p><strong>Observations:</strong></p>
<ul>
<li>As the number of validator nodes increases, the load on each individual vnode decreases, improving performance in <strong>Configuration 3</strong>, especially under moderate thread counts (e.g., 50–500).</li>
<li>At higher thread counts (e.g., 1000 or more), the dependency on storage nodes becomes the primary bottleneck, leading to errors or significantly increased retrieval times. Increasing the number of storage nodes would help alleviate these limitations at scale.</li>
<li><strong>Configuration 3</strong> consistently shows the best results at all thread counts before errors occur, showcasing the benefits of distributing the load across more validator nodes.</li>
</ul>
<hr>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusions"><strong>Conclusions</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/parallel-validators-and-dynamic-sharding#conclusions" class="hash-link" aria-label="Direct link to conclusions" title="Direct link to conclusions">​</a></h3>
<ul>
<li><strong>Scalability:</strong> As the number of nodes increased, the Push Chain Network demonstrated significantly improved scalability, particularly in <strong>Configuration 3</strong>. This configuration exhibited the best performance across most tests, showcasing the network’s ability to scale efficiently without sacrificing speed. The benefits of <strong>dynamic sharding</strong> ensured that even as the network grew, the system maintained fast response times, handling multiple concurrent threads effectively.</li>
<li><strong>Performance Bottlenecks:</strong> While performance remained strong as the node count grew, the network did experience timeouts and errors at higher thread counts. This indicates that, although the system can scale, there are throughput limits at extreme loads. However, <strong>Configuration 3</strong> was able to handle a larger volume of requests compared to smaller configurations, validating the advantages of scaling up the number of validator nodes. Given that the <strong>goal of the Push Chain Network</strong> is to scale up to <strong>100,000 validator nodes</strong>, the throughput limits observed at high thread counts are just the beginning. As the network grows, these limits would become significantly larger, making the network capable of handling a vastly higher volume of requests.</li>
<li><strong>Real-World Application:</strong> The results illustrate how the Push Chain Network becomes more scalable as nodes are added, making it a robust solution for future consumer-centric applications where network demands will increase.</li>
</ul>
<p>These benchmarks offer valuable insights into the scaling behaviour of the Push Chain Network, demonstrating its readiness to support growing adoption and demanding workloads. Moving forward, continued optimizations in areas like transaction propagation, parallel processing, and sharding will further enhance the network’s performance, enabling it to handle even higher loads.</p>
<hr>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Push Chain Benchmark" term="Push Chain Benchmark"/>
        <category label="Parallel Validators" term="Parallel Validators"/>
        <category label="Dynamic Sharding" term="Dynamic Sharding"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[👋🏾 Randomized Node Selection of Push Chain]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/randomized-node-selection-push-chain</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/randomized-node-selection-push-chain"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[👋🏾 Randomized Node Selection of Push Chain]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of 👋🏾 Randomized Node Selection of Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>
<p>One of the defining aspects of decentralized networks is their lack of a central authority to govern how they operate. Instead, these networks rely on a set of rules and systems to securely communicate and reach consensus on the overall state of the network.</p>
<p>Achieving this is no small task. It involves many essential components that ensure the network remains secure and fair, and among the most critical of these is <strong>randomness</strong>.</p>
<p>At its core, randomness is the absence of patterns or predictability in events. It's what makes a dice roll uncertain, ensures fairness in games, and strengthens the cryptographic algorithms that secure modern systems. In decentralized networks, randomness serves as a cornerstone of security and fairness, helping to prevent bias and manipulation.</p>
<p>In this article, we delve into the importance of randomness in decentralized networks and explore how Push nodes use randomness to bolster the security of the Push Chain.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="why-do-we-need-randomness">Why do we need Randomness?<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/randomized-node-selection-push-chain#why-do-we-need-randomness" class="hash-link" aria-label="Direct link to Why do we need Randomness?" title="Direct link to Why do we need Randomness?">​</a></h3>
<p>To begin with, let’s explore why randomness is so important in decentralized networks.</p>
<p>As mentioned earlier, decentralized networks lack a central authority. Instead, they rely on a distributed group of nodes spread across the globe. These nodes are responsible for performing various actions to ensure the network remains operational.</p>
<p>For the network to stay secure and fair, the selection of nodes for specific tasks must happen in a decentralized and unbiased manner. This is where <strong>randomness</strong> becomes crucial.</p>
<p>In decentralized systems, randomness ensures unpredictability in key processes, such as selecting validators or generating cryptographic keys. This unpredictability is vital to prevent malicious actors from manipulating the system or gaining undue control. For example, in consensus mechanisms like Proof of Stake, the random selection of validators ensures that no single participant can dominate the process, preserving the network's decentralized nature.</p>
<p>Randomness also strengthens the resilience of blockchains by making it harder for attackers to predict or influence outcomes. This unpredictability guards against attacks like <strong>Sybil attacks</strong> (where adversaries create fake identities) or <strong>collusion</strong> (where groups conspire to take control of the network).</p>
<p>Additionally, randomness plays a key role in promoting fairness. It ensures that every participant in the network has an equal chance to contribute and benefit, regardless of their resources or influence.</p>
<p>With this understanding of how crucial randomness is, let’s explore how Push Nodes leverage randomness to enhance the security and fairness of the Push Chain.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="a-glance-at-push-nodes">A Glance at Push Nodes<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/randomized-node-selection-push-chain#a-glance-at-push-nodes" class="hash-link" aria-label="Direct link to A Glance at Push Nodes" title="Direct link to A Glance at Push Nodes">​</a></h3>
<p><a href="https://push.org/blog/explaining-push-nodes/" target="_blank" rel="noopener noreferrer">Push Nodes</a>&nbsp;are a significant step towards the decentralized infrastructure for web3’s leading communication layer, the Push Protocol Network. This network is designed to facilitate secure and efficient movement of web3 notifications.</p>
<p>The Push Network comprises different types of nodes such as Validator Nodes, Storage nodes, etc. A smart contract guards the network to maintain node staking and slashing. This is where the PUSH token is used.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="how-the-push-network-uses-randomness-to-enhance-its-security">How the Push Network uses Randomness to enhance its Security<a href="https://push.org/blog/the-role-of-randomness-in-push-nodes/#how-the-push-network-uses-randomness-to-enhance-its-security" target="_blank" rel="noopener noreferrer"></a><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/randomized-node-selection-push-chain#how-the-push-network-uses-randomness-to-enhance-its-security" class="hash-link" aria-label="Direct link to how-the-push-network-uses-randomness-to-enhance-its-security" title="Direct link to how-the-push-network-uses-randomness-to-enhance-its-security">​</a></h3>
<p>In this section, we will specifically understand the complete mechanism of how a transaction is submitted onto Push network and the role of randomness involved in the process.</p>
<p>In the Push Network, the role of randomization is incorporated at multiple levels which allows the network to prevent centralization while ensuring that it remains resilient against a variety of attacks.</p>
<p>A crucial security mechanism of the Push Chain is the randomized selection of validators for transaction validation or block production. This mechanism leverages cryptographic randomness to ensure an unpredictable selection of validators &amp;&nbsp;attestants (&nbsp;<em>who verify whether or not a transaction is legit</em>&nbsp;) to enhance the network’s resilience and fairness.</p>
<p>A brief overview of the process looks something like this:</p>
<ul>
<li>To send a transaction to the network, the SDK/sender must attach a randomly generated token number to the transaction.</li>
<li>To fetch this token, the SDK can request the same from any validator.</li>
<li>Once received, the SDK attaches this token to the transaction and sends it to the network.</li>
<li>The network then uses this random token to cryptographically decide the specific validator to verify the particular transaction for further processing.</li>
<li>Additionally, the validator also randomly decides the validator set responsible for attesting to the transaction.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="now-lets-dive-deeper-into-the-randomness-of-the-push-network"><strong>Now, let’s dive deeper into the Randomness of the Push Network:</strong><a href="https://push.org/blog/the-role-of-randomness-in-push-nodes/#now-lets-dive-deeper-into-the-randomness-of-the-push-network" target="_blank" rel="noopener noreferrer"></a><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/randomized-node-selection-push-chain#now-lets-dive-deeper-into-the-randomness-of-the-push-network" class="hash-link" aria-label="Direct link to now-lets-dive-deeper-into-the-randomness-of-the-push-network" title="Direct link to now-lets-dive-deeper-into-the-randomness-of-the-push-network">​</a></h3>
<p>The Push SDK selects a random validator (VR1) to generate a special signed (RANDX) hex token.</p>
<p>The generation is performed as follows:</p>
<ol>
<li>
<p><strong>Generation of a Random Token:</strong></p>
<p>The network is designed to ensure that a random token cannot merely be generated by a single validator. Instead, it must be a combined effort as every random token is ideally a collection of digitally signed pieces of random numbers provided by specific validators in the network.</p>
<p>To determine the exact number of such pieces required to form the token, the Validator.sol smart contract defines a parameter called&nbsp;<code>*required_random_number</code>.* This indicates the number of required random peers whose signed values each validator must hold, at a given time. Additionally, the contract also defines an&nbsp;<code>*expiration_time*</code>&nbsp;parameter that defines the expiry time for these tokens which helps ensure that only freshly created tokens can be used for the creation of random tokens.</p>
<p>It should be kept in mind that validators in the network periodically ping their peers to collect and exchange signed random values. The collected value from each validator is a combination of the random value itself and the validator's signature, ensuring it can be verifiable.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">signedRandomValue </span><span class="token operator">=</span><span class="token plain"> value </span><span class="token operator">+</span><span class="token plain"> validatorSignature</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As a result, at any given moment the validators should have a collection of signed random values by their peers, i.e.,&nbsp;<strong><code>signedRandomValue[].</code></strong></p>
<p>Once a validator has accumulated the necessary signed random values, it can generate the random token. This token is derived from the network's collective randomness using the following formula:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token maybe-class-name">RANDX_Token</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">XOR</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token function" style="color:rgb(80, 250, 123)">sha</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">signedRandomValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">i</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> all i</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>
<p><strong>The SDK Requests for a Random Token</strong></p>
<p>Next, now let’s understand what happens when the SDK requests for a random token.</p>
<p>As previously mentioned, before sending any transaction to the network, the SDK&nbsp; requests for a random token that must be attached with the transaction being sent.</p>
<p>Now, since a random token value has already been generated ( as mentioned in step 1), any validator can provide this random token to the SDK.</p>
<p>The SDK then attaches this random token to the transaction payloads and sends the transaction to the network.</p>
</li>
<li>
<p><strong>Randomized Selection of Validators</strong></p>
<p>This random token attached to the transaction plays a crucial role in randomly deciding which validator will process the transaction. With this token, the SDK deciphers the validator ID, to whom it must send the transaction for further processing.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">validator_id </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">f</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">RANDX_TOKEN</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> contract_defaults</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">//OUTPUT looks like:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">validator_id </span><span class="token operator">=</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">where contractdefault parameters could be</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> </span><span class="token property-access">min</span><span class="token plain"> required quantityof random numbers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> </span><span class="token property-access">expiration</span><span class="token plain"> time</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">c</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"> </span><span class="token property-access">a</span><span class="token plain"> minimum numberof peers that acknowledge the validator's online status</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Upon receiving the transaction, the validator checks the random token in the transaction’s payload and validates it to confirm that it has been correctly assigned the role of handling this transaction.</p>
<p>In case the validator identifies that it has been wrongly chosen,&nbsp;<em><strong>it can reject the transaction.</strong></em></p>
<p>Once the accurate assignment of the validator is confirmed, the validator now creates a similar randomized process for creating a list of validators who must attest to the transaction being processed.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">vlist </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">f</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token maybe-class-name">RANDX_Token_2nd</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> contract_defaults</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// Output looks like this:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">vlist </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">V2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">V50</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">V11</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">V8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">V38</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">V17</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">V29</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This list of validators is also responsible for verifying its&nbsp;<strong>legitimacy.</strong></p>
</li>
</ol>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="summary">Summary<a href="https://push.org/blog/the-role-of-randomness-in-push-nodes/#summary" target="_blank" rel="noopener noreferrer"></a><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/randomized-node-selection-push-chain#summary" class="hash-link" aria-label="Direct link to summary" title="Direct link to summary">​</a></h3>
<p>To summarize, the entire process detailed above adds a security layer with the inclusion of randomization at multiple levels, i.e.,:</p>
<ul>
<li><strong>1st Level:</strong>&nbsp;The initial randomization starts with the SDK choosing any random validator to request for a token to be attached to the transaction.</li>
<li><strong>2nd Level: A token is generated</strong>&nbsp;using digitally signed pieces of random values from multiple random validators instead of relying on any single actor.</li>
<li><strong>3rd Level: A specific validator is randomly selected</strong>&nbsp;to create the token to be attached in the transaction occurs.</li>
<li><strong>4th Level:</strong>&nbsp;The final level of randomization determines which specific validator (VR2) will process a transaction and which validator set will act as attestants to verify the transaction.</li>
</ul>
<p>This multi-level randomness ensures that at every step, the network is secure, and fair, while continuing to operate in a completely decentralized fashion.</p>
</li>
</ol>
<hr>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Push Chain Nodes" term="Push Chain Nodes"/>
        <category label="Parallel Validators" term="Parallel Validators"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understand Proof of Stake (POS) and Push Chain PoS]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Understand Proof of Stake (POS) and Push Chain PoS]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>
<p>In a globally distributed computing environment, achieving collective agreement on the true state of the system has always been a complex challenge.</p>
<p>Fortunately, there are algorithms ( <em>specialized instructions</em> ) that assist in preserving this ‘single-truth-state’ while balancing network security, long-term sustainability, and economic incentives.</p>
<p>Such algorithms in the web3 space, are popularly known as - Consensus Algorithms.</p>
<p>This article is the only guide you will need to know about - What Proof oF Stake is, Its significance and how does it work.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="proof-of-stake---a-quick-overview">Proof Of Stake - A quick overview:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#proof-of-stake---a-quick-overview" class="hash-link" aria-label="Direct link to Proof Of Stake - A quick overview:" title="Direct link to Proof Of Stake - A quick overview:">​</a></h2>
<p>Proof Of Stake is a consensus algorithm used to secure blockchain networks where block producers (validators) are chosen based on the number of tokens they're willing to "stake" or lock up as collateral.</p>
<p>Validators are incentivised to act honestly, since, any malicious behaviour would result in them losing their staked assets.</p>
<p>[DIAGRAM]</p>
<p><img loading="lazy" alt="First Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image1-e1c9d431f7518c55fbfe2c3aa7dea283.webp" width="2396" height="824" class="img_ev3q"></p>
<p>Validators - Are Nodes responsible for securing the network by performing two key actions:</p>
<ul>
<li>Proposing new blocks - containing transactions.</li>
<li>Attestation - Examining and voting on the blocks proposed by other validators</li>
</ul>
<p>Now that we have a basic understanding about the PoS.</p>
<p><strong>Lets go down the rabbit hole to know more about it.</strong></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="why-do-we-need-pos">Why do we need PoS?<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#why-do-we-need-pos" class="hash-link" aria-label="Direct link to Why do we need PoS?" title="Direct link to Why do we need PoS?">​</a></h2>
<p>Each network is  based on some foundational philosophies.</p>
<p>Bitcoin  popularly known for its PoW (Proof of Work) algorithm is based on the principal of -<strong>Earning the right to validate by demonstrating computational work.</strong></p>
<p>Where as chains like Ethereum, Solana and Push Chain - are predominantly based on the philosophies of “<strong>Proving value to validate and earn incentives  at the risk of commitment and economic loss”</strong></p>
<p>This proves your commitment towards the network by staking tokens to participate in network’s consensus with the risk of being penalized for jeopardizing the network’s security.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ease-of-entry">Ease of Entry:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#ease-of-entry" class="hash-link" aria-label="Direct link to Ease of Entry:" title="Direct link to Ease of Entry:">​</a></h3>
<p>Staking makes it easier for individuals to participate in securing the network, promoting decentralization.</p>
<p>An Ethereum validator node could be easily run on a normal laptop.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="energy-efficiency">Energy Efficiency:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#energy-efficiency" class="hash-link" aria-label="Direct link to Energy Efficiency:" title="Direct link to Energy Efficiency:">​</a></h3>
<p>→ PoS networks are highly energy efficient in terms of cost of operations and compute consumption.</p>
<p>→ PoS eliminates the energy-intensive mining computations of PoW, replacing them with a stake-based validator selection process that requires only basic network communication and transaction validation operations.</p>
<p><img loading="lazy" alt="Second Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image2-2b56c897259d738781e5f1fb68be0df5.webp" width="1150" height="606" class="img_ev3q"></p>
<p><img loading="lazy" alt="Third Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image3-49ccdc1dd96fd6f73e515c8626772db6.webp" width="1838" height="1412" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stake-to-participate">Stake to participate:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#stake-to-participate" class="hash-link" aria-label="Direct link to Stake to participate:" title="Direct link to Stake to participate:">​</a></h3>
<p>In PoS networks, <strong>influence is tied to economical commitment instead of computational power.</strong></p>
<p>Participants (validators) pledge their assets (stake) in exchange for the right to participate in the network’s consensus.</p>
<p>Thus, creating an relationship that  equally benefit the interests of the validators as well as the collective network.</p>
<p><em>The equation only stands true until the validators stay true to their commitments.</em></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="skin-in-the-game">Skin in the game:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#skin-in-the-game" class="hash-link" aria-label="Direct link to Skin in the game:" title="Direct link to Skin in the game:">​</a></h3>
<p>The success of a PoS network hinges on the honesty of its validators.</p>
<p>Validators are required to deposit (stake) the networks native currency in adequate quantities to participate  in the block creation.</p>
<p>Validators risk losing their staked assets <em>(getting slashed</em> <em>)i</em>f they attempt to game the system for their personal gains by :</p>
<ul>
<li>Approving fraudulent transactions</li>
<li>Censoring incoming transactions.</li>
<li>Failiing to participate</li>
<li>Sending conflicting attestations</li>
<li>Proposing multiple blocks in a single slot (aka Equivocating)</li>
</ul>
<p>As the network grows, the cost to attack it increases proportionally.</p>
<p>The amount of tokens slashed varies with every network.</p>
<p>To know about slashing values for Push Chain - visit the Push Chain Governance Proposal [PROPOSAL LINK].</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="scalability">Scalability:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#scalability" class="hash-link" aria-label="Direct link to Scalability:" title="Direct link to Scalability:">​</a></h3>
<p>In PoS the block creation is a process of “<strong>probabilistic election</strong>” rather than “<strong>computation competition</strong>”.</p>
<p>Since time taken to elect a validator is significantly less, block creation frequency is (arguably) much higher than PoW networks, significantly boosting transaction speeds and scalability.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="security-and-resilience">Security and Resilience:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#security-and-resilience" class="hash-link" aria-label="Direct link to Security and Resilience:" title="Direct link to Security and Resilience:">​</a></h3>
<p>As highlighted earlier, in a PoS network, the cost to attack increases proportionally with the network’s growth.</p>
<p>A 51% attack—where malicious actors gain control of 51% of staked coins to reverse transactions and manipulate block confirmations—becomes increasingly impractical and expensive as the network grows and the token prices rises (ideally).</p>
<p>Dominic Williams, Founder of ICP, outlines three critical elements of Sybil resistance in his paper</p>
<p>‘<a href="https://docs.google.com/document/d/1eRTAe3szuIoZEloHvRMtZlrU7t2un4UVQ8LarpU3LNk/edit?tab=t.0" target="_blank" rel="noopener noreferrer">Sybil-resistant Network Identities From Dedicated Hardware</a>’</p>
<ul>
<li><strong>Entry Cost:</strong> The expense required to participate.</li>
<li><strong>Existence Cost</strong>: Ongoing costs to maintain participation.</li>
<li><strong>Exit Penalty</strong>: The penalties for leaving or misbehaving</li>
</ul>
<p><img loading="lazy" alt="Fourth Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image4-d459feb3f4515572fcf2fdb1662ef77e.webp" width="2002" height="1338" class="img_ev3q"></p>
<p>PoW chains like Bitcoin does not have an Exit Penalty mechanism - to punish the validators for deterring the integrity of network. But PoS chains, like Push Chain - cover all the bases, ensuring stricter sybil resistance.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="how-does-proof-of-stake-work">How does Proof of Stake work?<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#how-does-proof-of-stake-work" class="hash-link" aria-label="Direct link to How does Proof of Stake work?" title="Direct link to How does Proof of Stake work?">​</a></h2>
<p>The Proof of Stake (PoS) process operates in three key phases:</p>
<ol>
<li><strong>Validator Selection</strong></li>
<li><strong>Block creation and validation</strong></li>
<li><strong>Finalization</strong></li>
</ol>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validator-selection"><strong>Validator Selection:</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#validator-selection" class="hash-link" aria-label="Direct link to validator-selection" title="Direct link to validator-selection">​</a></h3>
<p><img loading="lazy" alt="Fifth Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image5-d24488a5c3075314c38e3ecbbcaaa89f.webp" width="2180" height="506" class="img_ev3q"></p>
<p>Validator selection forms the backbone of PoS, where nodes participate by staking the network’s native currency into a deposit contract. The staked amount must meet or exceed a predetermined threshold or lowerbound (e.g., 32 ETH for Ethereum).</p>
<p>To propose a block, the probability of validators getting elected is directly proportional to the staked amount relative to the total coins staked across the network.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="block-creation"><strong>Block creation:</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#block-creation" class="hash-link" aria-label="Direct link to block-creation" title="Direct link to block-creation">​</a></h3>
<p>Timekeeping is critical in PoS, structured through two key units: <strong>Slot</strong> and <strong>Epoch.</strong></p>
<ul>
<li>A slot - is a fixed duration of time that varies network to network ( 1 slot = 12 sec in Ethereum and 400ms in Solana).</li>
<li><strong>Epoch</strong>: A cycle comprising multiple slots (e.g., 32 slots in Ethereum)</li>
</ul>
<p>Slots are sequential and occur one after other in a linear manner.</p>
<p>(<em>But not in case of Push Chain - More on this later)</em></p>
<p>Each slot is assigned to a randomly chosen validator, selected through  Specialized algorithms like RandDAO in Ethereum and VDF - Verifiable Delay Function in Solana.</p>
<p>Within their slot duration, validators responsible for tasks:</p>
<ul>
<li>Package transactions into a block</li>
<li>Verify their validity</li>
<li>Initiate the process of propagating the block across the network.</li>
</ul>
<p><img loading="lazy" alt="Sixth Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image6-0fd256ac49bf1f3d8395831e6a10a2f9.webp" width="2618" height="700" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validation-and-finalization"><strong>Validation and Finalization</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#validation-and-finalization" class="hash-link" aria-label="Direct link to validation-and-finalization" title="Direct link to validation-and-finalization">​</a></h3>
<p>Once a block is proposed, a committee of a defined number of validators is randomly chosen to vote on the validity of the block by careful examining of its contents - This process is called as attestation.</p>
<p><strong>Attestation Weight</strong>: Each vote is weighted based on the validator’s stake.</p>
<p><strong>Confirmation</strong>: A block is finalized when at least 2/3 of the total staked tokens sign off on its validity, ensuring a strong consensus.</p>
<p><img loading="lazy" alt="Seventh Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image7-9088a84eb87b61c54a7b46adf9154fe6.webp" width="1542" height="424" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="edge-cases">Edge cases:<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#edge-cases" class="hash-link" aria-label="Direct link to Edge cases:" title="Direct link to Edge cases:">​</a></h3>
<ul>
<li>
<p><strong>Missed Blocks -</strong></p>
<ul>
<li>Instances when a validator fails to propose a block within their slot, it results in a missed block.</li>
</ul>
</li>
<li>
<p><strong>Orphaned Blocks -</strong></p>
<p>These occur when a block is rejected by the validating committee or during a chain fork.</p>
<p>Orphaned blocks represent alternative versions of chain historythat are not followed  by majority of network.</p>
</li>
</ul>
<p>In summary, this is how the entire process would look like:</p>
<p><img loading="lazy" alt="Eigth Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image8-c154f786db3f95363f5fc1249d19805c.webp" width="1278" height="1372" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="how-does-push-nodes-use-pos">How does Push Nodes use PoS?<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/understand-proof-of-stake-and-push-chain#how-does-push-nodes-use-pos" class="hash-link" aria-label="Direct link to How does Push Nodes use PoS?" title="Direct link to How does Push Nodes use PoS?">​</a></h3>
<p>Push Chain - is a Proof of Stake shared state blockchain for shared app experiences designed to support the development of <strong>hyper-scalable, consumer-centric, universal web3 applications.</strong></p>
<p>Push Chain enables txs from any chain (Solana, Eth, EVM, or non-EVM) with fast finality of &lt; 1 second and the ability to scale infinitely as nodes increase, supporting tens of thousands of parallel transactions</p>
<ul>
<li>Any Chain Tx ⛓️</li>
<li>Fee &amp; Wallet Abstraction 💰&nbsp;🔐</li>
<li>Parallel Validation and Dynamic Sharding 🛠️</li>
<li>Consumer tx (unordered) and Traditional tx (ordered)</li>
<li>Universal Smart Contract 🌐</li>
<li>Shared App Experience  🤝</li>
</ul>
<p>Push Chain uses an innovative approach towards tweaking its consensus mechanism in order to incorporate its multi-node architecture and ability to support both, ordered and un-ordered blocks with parallel validation.</p>
<p>Push Chain distributes responsibilities across three specialized node types:</p>
<p><strong>Validator Nodes -</strong>  Forms the backbone of the network, handling transaction validation and block production.</p>
<p><strong>Storage Nodes</strong> - Manage the network's data through dynamic sharding, enabling efficient  distribution and retrieval. Storage Nodes work in sync with validators to ensure data availability and decentralization.</p>
<p><strong>Archival Nodes</strong> - Serve as the network's historical record keepers, storing complete transaction logs and providing WebSocket functionality for real-time data access and analytics.</p>
<p>Optimised for hyper scalable consumer apps - Push Chain introduces <strong>stateless blocks</strong> with parallel execution ****for faster processing and validation of non-value consumer data transactions.</p>
<p>For selecting block validators - the system uses a multi-level randomization process to avoid  validator collusion during parallel block processing.</p>
<p>More details about the randomization mechanism can be found in the Push Chain Whitepaper.</p>
<p>To maintain the network’s economical integrity - Push Chain has a modified penalising mechanism which  includes the act of ‘Reporting’ - Which acts like a warning to correct the node’s behaviour instead of simply slashing and banning the node instantly.</p>
<p><img loading="lazy" alt="Ninth Image of Understand Proof of Stake (POS) and Push Chain PoS" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image9-7595d8391a6ccd4625d8891809817751.webp" width="1082" height="1008" class="img_ev3q"></p>
<p>There are a lot more novel and interesting elements that make Push Chain a powerful choice for building Universal Apps - Read [Push Whitepaper] to know more!</p>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Proof of Stake" term="Proof of Stake"/>
        <category label="Push Chain Nodes" term="Push Chain Nodes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why PUSH Chain?]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain"/>
        <updated>2024-12-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Why PUSH Chain?]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-f7366d37297ee65289d3e8c0d47e4f65.webp" width="1600" height="900" class="img_ev3q"></p>
<p>Push Protocol recently announced its governance proposal of launching Push Chain.</p>
<p>Push Protocol envisions the creation of Push Chain which enables a shared state L1 chain designed to support truly scalable consumer applications and universal applications.</p>
<p>This article explains why Push Chain is needed and why it matters.</p>
<p>We will dive deep into each of the concerns that exist in web3 today and the solutions that Push Chain offers for each one of them.</p>
<p>In order to understand what Push Chain offers, let’s first get a good understanding of the concerns in today’s web3 world that is a blocker for consumer apps and universal/unified  applications.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-major-concerns-in-web3-today">The Major Concerns in Web3 Today<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#the-major-concerns-in-web3-today" class="hash-link" aria-label="Direct link to The Major Concerns in Web3 Today" title="Direct link to The Major Concerns in Web3 Today">​</a></h2>
<p><strong>1. Web3 is not well-equipped for building truly scalable  consumer-centric adoption</strong></p>
<p>Fundamentally,  web3 should be unbiased towards a peculiar industry use case. However, practically, there’s an evident misalignment where today’s web3 infrastructure is more optimized for financial use cases.</p>
<p>Financial apps and consumer-centric apps (<em>e.g. social, gaming, etc</em>)  inherently have different infrastructure needs:</p>
<p>Finance-specific apps require:</p>
<ul>
<li><em>A high level of security,</em></li>
<li><em>Strict transaction and block ordering,</em></li>
<li><em>Prioritization of state accuracy and finality over speed, etc.</em></li>
</ul>
<p>On the flip side consumer apps require more flexible models that emphasize:</p>
<ul>
<li><em>Hyper scalability</em></li>
<li><em>Low latency</em></li>
<li><em>Simplified UX</em></li>
<li><em>Affordability</em></li>
<li><em>Support for both ordered and unordered transactions ( a.k.a, consumer transactions, as we call it )</em></li>
</ul>
<p>Web3 ecosystem is heavily skewed  towards financial applications. The bias is evident in the rise of projects centered around trading, lending, staking, perps, and similar use cases.</p>
<p>Such finance-centric infrastructure forces consumer apps to make suboptimal compromises impacting their performance and usability.</p>
<p>Even the advent of app-specific chains hasn’t fully resolved these tradeoffs.</p>
<p>For instance, the <a href="https://a16zcrypto.com/posts/article/state-of-crypto-report-2024/" target="_blank" rel="noopener noreferrer"><strong>State of Crypto 2024</strong></a> report by a16z highlights how on-chain games running on dedicated rollups are struggling to keep up with the increasing user demand, straining the network and as a result consuming multifolds of M/gas (<em>mega gas per second</em>) as compared to Ethereum.</p>
<p><img loading="lazy" alt="First Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image1-eb0b7729b82e747edaacd4830a051f72.webp" width="1536" height="864" class="img_ev3q"></p>
<p>Consumer-centric apps, which could appeal to broader audiences, are still in their infancy compared to the much more mature and sophisticated DeFi sector.</p>
<p>This focus on finance has led to a situation where the average user might view web3 as a playground for traders and investors rather than a tool for everyday life.</p>
<p>The report from a16z also provides another key insight:</p>
<p><img loading="lazy" alt="Second Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image2-c5b67901ce12b97c3fbf39b8cd9a5f02.webp" width="1868" height="1558" class="img_ev3q"></p>
<p><strong>Out of ~617 million global crypto users, only 5-10% (30-60 million) users actively transact!</strong></p>
<p>Barriers to entry, the dilemma of choosing the right chain, and multiple points of friction in UX  could reasonably be attributed as causes of the growing share of dormant users.</p>
<p><img loading="lazy" alt="Third Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image3-2751b46496c5642278c8ebdb04b5df65.webp" width="2408" height="1000" class="img_ev3q"></p>
<p>Vitalik in his <a href="https://youtu.be/ei3tDRMjw6k?si=w1kYuzgR0ho-90Eb&amp;t=1775" target="_blank" rel="noopener noreferrer">recent talk at Devcon</a> (timestamp: 29:35) emphasized the need for building both non-financial and mixed financial applications.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fragmentation-of-chains-is-a-major-blocker-towards-overall-web3-ux-improvement"><strong>Fragmentation of chains is a major blocker towards overall web3 UX improvement</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#fragmentation-of-chains-is-a-major-blocker-towards-overall-web3-ux-improvement" class="hash-link" aria-label="Direct link to fragmentation-of-chains-is-a-major-blocker-towards-overall-web3-ux-improvement" title="Direct link to fragmentation-of-chains-is-a-major-blocker-towards-overall-web3-ux-improvement">​</a></h3>
<p>With Vitalik’s conception of the <em>Rollup-Centric  Roadmap, back in 2020,</em> Ethereum pivoted towards rollups as their scaling strategy - as <strong>bundling multiple transactions</strong>&nbsp;<strong>into batches</strong>&nbsp;significantly increased&nbsp;<em><strong>transaction throughput</strong></em>&nbsp;and&nbsp;<em><strong>reduced transaction costs.</strong></em></p>
<p>This solved Ethereum’s scalability issues effectively and led to an abundance of <em>L2 and L3 chains.</em></p>
<p>However, the joyous ride is now hitting some rough bumps.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ux-fragmentation">UX Fragmentation<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#ux-fragmentation" class="hash-link" aria-label="Direct link to UX Fragmentation" title="Direct link to UX Fragmentation">​</a></h3>
<p><em>Clutter is the Enemy of Clarity.</em></p>
<p>With each additional step spent completing an action, including switching between networks, time spent in choosing the right chain, protocol, or wallet, decreases <a href="https://andrewchen.com/psychd-funnel-conversion/" target="_blank" rel="noopener noreferrer"><em>Psych</em> - a unit of measure for motivation to complete an action.</a></p>
<p>Here is a quick glance at what a typical web3 user needs to deal with in this multi-chain universe:</p>
<p><em>→managing multiple wallets,
→managing multiple native tokens/assets in their multiple wallets,
→understanding the nuances of each network,
→navigating multiple networks to perform simple tasks,
→interacting with complicated dapp UIs with frequent network switching
→navigate through inconsistent user interfaces
→relying on the risky route of cross-chain bridging between chains
→experiencing difficulty in maintaining a consistent cross-chain identity due to the multi-chain   ecosystem
→dealing with the lack of standardization between networks, protocols, etc
→dealing with the learning curve of understanding different networks, each with its own set of rules, interfaces, and requirements.</em></p>
<p>Remember that this is just a glance at the UX problem.</p>
<p>There are undoubtedly more issues issues for a web3 user daily. The list is even longer when it comes to newbie web3 users.</p>
<p><img loading="lazy" alt="Fourth Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image4-1ffdae2ec53d35c95e7f47f4c1f0acbe.webp" width="2128" height="1140" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="user-retention-challenges"><strong>User Retention Challenges</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#user-retention-challenges" class="hash-link" aria-label="Direct link to user-retention-challenges" title="Direct link to user-retention-challenges">​</a></h3>
<p>Poor UX can directly impact user retention.</p>
<p>Truth be told, it already is impacting user retention.</p>
<p>When users encounter difficulties in navigating the web3 ecosystem, they are less likely to return to it. High-profile dApps that have struggled with user retention due to UX issues serve as cautionary tales for new projects entering the space. Complex interfaces, slow transaction times, and confusing wallet setups have all contributed to a decline in user engagement and adoption.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="security-and-trust-concerns"><strong>Security and Trust Concerns</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#security-and-trust-concerns" class="hash-link" aria-label="Direct link to security-and-trust-concerns" title="Direct link to security-and-trust-concerns">​</a></h3>
<p>The complexity of managing multiple chains also introduces security risks.</p>
<p>Users must ensure that they are interacting with the correct chain, using the right wallet, and understanding the implications of each transaction. This complexity increases the likelihood of user errors, such as sending assets to the wrong address or falling victim to phishing attacks.</p>
<p>Furthermore, the process of bridging assets between these chains is quite often cumbersome and fraught with risks. Users must rely on various bridging protocols, which not only add to the complexity but also introduce potential security vulnerabilities. For instance, a user willing to move tokens from Ethereum to an L2 solution must navigate multiple steps, including wrapping and unwrapping tokens, which can be a deterrent for new users.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="increased-complexity-for-builders"><strong>Increased Complexity for Builders:</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#increased-complexity-for-builders" class="hash-link" aria-label="Direct link to increased-complexity-for-builders" title="Direct link to increased-complexity-for-builders">​</a></h3>
<p>Each chain often has its own development tools, SDKs, and environments that developers must learn &amp; adapt to, which can be time-consuming and lead to inconsistencies in development practices. Maintaining applications that operate across multiple chains requires managing multiple codebases or conditional code paths. This can lead to significant maintenance overhead, especially when chains update their protocols or APIs.</p>
<p>Each additional chain integrated into an application introduces new potential vulnerabilities. Developers must ensure that the security of cross-chain interactions is robust, as any weakness could lead to exploits or hacks.</p>
<p>Furthermore, developing for a multi-chain ecosystem that still lacks adequate standardization - is costly. It requires more time and resources, as developers need to learn and implement different protocols, test on multiple platforms, and ensure compatibility across the whole environment involved. The additional cost of extensive security audits makes the process of building &amp; maintaining apps even more difficult.</p>
<p>There is no one size fits all solution, nor is there a way to restrict the proliferation of chains.</p>
<p><em><strong>But what if there was a way to unify every fragmented state under one shared state?</strong></em></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="a-shared-state-chain-is-needed-that-can-enable-shared-app-experiences"><strong>A shared state chain is needed that can enable shared app experiences</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#a-shared-state-chain-is-needed-that-can-enable-shared-app-experiences" class="hash-link" aria-label="Direct link to a-shared-state-chain-is-needed-that-can-enable-shared-app-experiences" title="Direct link to a-shared-state-chain-is-needed-that-can-enable-shared-app-experiences">​</a></h3>
<p>Let’s dive a bit further into the complexities of multi-chain web3 world.</p>
<p>While fragmented UX is definitely a concern, there are more.</p>
<p>There are over 30 Layer 1s, 120 Layer 2s and soon thousands of Layer 3 chains.
Imagine the sheer number of DApps deployed on all of these chains!</p>
<p>Newer chains have led to the rise of siloed environments having limited or zero awareness of each others state - even Ethereum!</p>
<p>The majority of these apps still operate within closed systems. Contracts pertaining to each chain store states in an isolated manner leaving little opportunity for users for a unified experience.  Siloed environments in turn add more interop complexities forcing developers to <strong>shift price-sensitive apps</strong> to app-sensitive infrastructure, further affecting the UX and escalating fragmentation.</p>
<p>Here is a quick look at Vitalik and Justin Drake talking about the same issues:</p>
<p><img loading="lazy" alt="Fifth Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image5-ba2bb43ea96df9a072e6e0f8c40fc82c.webp" width="1226" height="1452" class="img_ev3q"></p>
<p><img loading="lazy" alt="Sixth Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image6-dd608dd464b88b7015a73445fab636b2.webp" width="1528" height="766" class="img_ev3q"></p>
<p>With such an extent of liquidity, state and UX fragmentation, it becomes troublesome for web3 apps/users to seamlessly interact with apps on multiple chains. In fact, in order to move assets or payloads between chains, a user is often exposed to the on-chain intricacies and risks to achieve simple tasks.</p>
<p>For instance, a use with governance token on chain A cannot vote on any proposal of the same protocol on chain B as there is no unified system to support this activity. As a result, every app on a specific chain becomes its own siloed state.</p>
<p>This leads to an issue where there is no unified infra for apps to be built on. And there is a shared app experience for users to just use apps without having to worry about the underlying chains, finality risks, bridging or facing complicated UX.</p>
<p>So far, we have discussed the concerns.</p>
<p>Let’s now understand what is Push Chain and how it helps us resolve these concerns.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="enter-push-chain">Enter Push Chain<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#enter-push-chain" class="hash-link" aria-label="Direct link to Enter Push Chain" title="Direct link to Enter Push Chain">​</a></h2>
<p>Push Chain is a shared state blockchain for shared app experience.</p>
<p>It is a Proof of Stake (PoS) chain built to allow developers to create scalable and universal apps and act as a shared settlement layer for multiple L1s, L2s and L3s. It is designed to allow transactions from any chain, use fee abstraction to avoid the strict requirement of native gas tokens for multiple chains and provide wallet abstraction for seamless onboarding and signing for any user.</p>
<p>It also introduces a new transaction type which we define as consumer transactions (where ordering is not important) to enable non-financial apps to have the speed and scalability which any consumer app requires. It leverages new mechanisms like parallel block execution and dynamic sharding to enable true scaling, and providing the perfect environment for any consumer app or universal app to thrive in the era of fragmented chains.</p>
<p><img loading="lazy" alt="Seventh Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image7-a27f77c2896dc4553c78bb2717a94e90.webp" width="1034" height="920" class="img_ev3q"></p>
<p>Push chain aims to solve some of the critical concerns in web3 today, as previously explained, and it plans to solve them in 3 specific phases. Each of these phases tackle a particular problem and eventually leads us to our core vision of achieving a shared app experience for web3 and enable universal apps with enhanced UX.</p>
<p>Mentioned below are the 3 main phases:</p>
<ol>
<li><strong>Phase-1:</strong> To enable consumer-centric apps with hyper scalability, fee abstraction, wallet abstraction and any chain transactions.</li>
<li><strong>Phase-2:</strong> To enable seamless interoperability between chains for apps and users.<br>
<!-- -->(<em>An intermediary phase to enable the universal smart contracts and shared state</em>)</li>
<li><strong>Phase-3:</strong>  To enable universal smart contracts and shared state in order to make other chain’s state accessible on Push Chain and unlocking the era of universal apps.</li>
</ol>
<p>Now, let’s understand each of the above-mentioned concerns and explore how Push Chain aims to resolve them.</p>
<ol>
<li>
<p><strong>The Concerns with Consumer-Specific App</strong></p>
<p>So far we have explored why building and using consumer-specific web3 apps is difficult.</p>
<p>However, let’s now dive deep to first understand what exactly does a consumer-app required and how Push Chain completes those requirements.</p>
<p>Some of the main requirements of a consumer-centric applications are:</p>
<ol>
<li>
<p><strong>Simplified User-Onboarding:</strong> Apps required seamless onboarding and intuitive user interface. In simpler terms, this indicates that applications should be so easy to use that the user should never have to learn the intricacies of the underlying technology stack.</p>
<p>However, its not the case in web3. The intuitiveness ends the moment users are required to <em>set up a web3 wallet and remember the mnemonics</em>. This means the very first step a user is required to do for using web3 apps will most likely be the most difficult step in itself.</p>
<p>Once the user enters the rabbit hole of using a web3 app, they are then required to either <em>choose a chain, sign a transaction, collect and manage native gas tokens of the respective chain, switch between different chains, bridge tokens, etc.</em> The list goes on and <em><strong>the further you explore, the harder the UX.</strong></em></p>
<p>With Wallet Abstraction**,** Push Chain aims to enable seamless user onboarding without going through the manual and complicated procedure of setting up a web3 wallet.</p>
<p><img loading="lazy" alt="Eigth Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image8-70c78f84636ce3306181274bed509f46.webp" width="1036" height="898" class="img_ev3q"></p>
<p>Wallet abstraction addresses challenges by removing the need for direct mnemonic management. Instead, Push Chain allows users to authenticate using familiar methods like <em>social logins, email, or phone numbers.</em> This system abstracts away the complexity of mnemonic custody by securely managing a master key pair on behalf of the user, while still ensuring they retain ultimate control.</p>
<p>The Push wallet can dynamically derive blockchain-specific keys from the master key pair, enabling seamless interaction across multiple blockchain networks. By simplifying wallet operations and providing a unified experience, wallet abstraction reduces friction, enhances usability, and makes blockchain technology more accessible without compromising security.</p>
<blockquote>
<p><em>The whitepaper explains the Key Management and technical aspects around keys in much more depth. Check it out here</em></p>
</blockquote>
</li>
<li>
<p><strong>Instant Finality &amp; Scalability:</strong> A consumer-centric app needs to support a large number of users without compromising performance. Additionally, it needs to support instant finality so that users experience a similar speed as in traditional apps.</p>
<p>Although layer 2 solutions and rollups aim to address scalability, the current state of web3 still struggles to match the speed and efficiency of traditional centralized systems. For a consumer-centric app, any delay in processing or finalizing transactions will lead to a poor user experience.</p>
<p><strong>Push Chain</strong> is designed to solve this with its instant finality as well as its support for <em>unordered transactions, <strong>a.k.a, consumer transactions.</strong></em></p>
<p>A consumer transaction can be defined as the type of transaction that doesn't benefit from the strict ordering as seen in traditional web3 transactions where strict ordering with a nonce is mandatory. These can also be categorized as transfers of consumer data like notifications, emails, blogs, etc that do not require a strict order to be executed.</p>
<p>Since there is no state change for such transactions, they don’t need to change the merkle root of the network and thus can be called <strong>orderless transactions.</strong></p>
<p>Examples of these transactions can be emails sent from one user to another, posting on social media, writing blogs, creating content, defining user settings for an app, defining user meta-data, storing soft state data for gaming among others.</p>
<p>The Push Network is designed to facilitate a wide range of consumer transactions, providing a robust and scalable platform for decentralized applications. The transaction model in the Push Network is tailored to support high-throughput, low-latency operations, ensuring that various applications can interact seamlessly.</p>
<p><strong>Since scalability is crucial for any application, phase 1</strong> of the Push Chain roadmap includes the development of new optimization such as <strong>parallel block execution and dynamic sharding</strong> to create the true scaling of web3 apps, enabling read and write capabilities that scale as the number of nodes in the network scales, which provides an infrastructure that can handle the needs of thousands of applications related to speed and scalability.</p>
</li>
<li>
<p><strong>Affordability:</strong> A major pain point of using any app is the associated cost. If an app requires a user to spend a high as well as indeterministic cost every time he/she wishes to use the app - the user will most likely never use it.</p>
<p>Consumers expect low or no fees for transactions within apps, especially non-monetary ones. Gas fees, while necessary to secure the network, are a major barrier to consumer adoption. In web3, transaction fees are often too high for the average consumer; even more so during network congestion. However, solving this has been difficult as there is a always gas fees/network fees associated with any and every action a user might want to take.</p>
<p><strong>With Push Chain’s Fee Abstraction feature,</strong> we eliminate this problem to a greater extent.</p>
<p>Fee Abstraction is a key feature of this chain that eliminates the friction of requiring to hold native gas strictly in the wallet in use.</p>
<p>Furthermore, a sustainable decentralized network needs to be present in order to ensure the long-term viability of the project. To do this, we propose including a mechanism for having a fee quota.</p>
<p>A user is able to purchase fees in bulk that can then be used by them, delegated to other users / wallets or can even be paid by web3 applications. The key idea behind locking fees in bulk is to ensure that the transaction coming from whatever blockchain network is not limited by the speed of that particular blockchain’s TPS.</p>
<p>Additionally, there is a fallback mechanism that does a graceful conversion using swapper contracts which takes the native token of a specific blockchain and swaps it for Push Chain’s fees.</p>
<p>This ensures that in the event a different chain user doesn’t have enough fees, even then the network is still able to fallback and use that particular blockchain’s native token for the conversion and eventual processing of the transaction. This mechanism ensures that even running out of quota is not a barrier to transaction creation, providing flexibility in payment methods.</p>
</li>
</ol>
</li>
<li>
<p><strong>The Concerns with Multi-Chain Navigation &amp; Fragmented Ecosystem</strong></p>
<p>As previously stated, a core reason behind difficult UX in web3 is the existence of multiple different chains. Each of these chains offers some key feature but eventually leads to a fragmented ecosystem.</p>
<p>If we observe the space as whole, carefully, it is quite evident that there are two main requirements for apps to navigate such an ecosystem:</p>
<ul>
<li>Fast and reliable movement of value and messages between chains ( <em>for both apps and users )</em></li>
<li>A shared state infrastructure that allows building apps that appear to work seamlessly in a unified fashion and give a <strong>shared app experience</strong> to the user - completely eradicating the complexity of navigating multiple chains for using apps.</li>
</ul>
<p>If an infrastructure achieves both of these for the apps built on top of it, it can ideally resolve the most difficult UX problem that exists in web3 apps today.</p>
<p>That’s exactly what Push Chain aims to solve in its Phase 2 and 3.</p>
<p><strong>With Phase 2</strong> of its roadmap, the chain aims to establish seamless interoperability between chains to enable cross-chain features in the apps. The interoperability shall be enabled using a solver network capable of instant cross-chain transactions to ensure better UX. The network shall be designed to move not just value but also arbitrary payloads that seamlessly transfer smart contract calls to other chains.</p>
<p>The main goals of this phase is are to:</p>
<ul>
<li>Enable fast and reliable movement of messages/assets between chain</li>
<li>Delegate on-chain intricacies and risks from users to solvers ( <em>specialized on-chain actors )</em></li>
</ul>
<p>At the point in which both of these goals are accomplished, we will achieve a win for both the users and the apps on top of Push Chain.</p>
<p><strong>With Phase 3,</strong> we achieve the shared state L1 chain that is capable of supporting universal apps. Most importantly, this phase establishes one of the key features of Push Chain, i.e., <strong>shared app experiences (</strong> <em>with Shared State )</em><strong>.</strong></p>
<p>Shared state means that Push Chain not only has read and write access to its own state but also has read-only access to all the other supported chains’ states. Combining this with Push ID enables universal smart contracts wherein the smart contracts on Push Chain have access to the state of all of the wallets of the user even if those wallets belong to other chain(s). This enables developers to understand the user and build universal smart contracts to fulfill the user’s need irrespective of what chain(s) the user state is on which ushers countless innovations.</p>
<p><img loading="lazy" alt="Ninth Image of Why Push Chain" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/image9-0277bcf4353ad392efa0adcf75fb3894.webp" width="1364" height="1006" class="img_ev3q"></p>
<p>The feature opens up the entire web3 userbase to be available for a web3 application enabling shared app experiences no matter from what blockchain the user accesses the application. It also makes Push Chain the shared settlement layer for all other chains (EVM / Non-EVM).</p>
<p>This enables developers to completely abstract away any learning from the user, creating an era where a user does not use Uniswap “on Ethereum” or Uniswap “on Polygon” or Uniswap “on Arbitrum” — but rather simply <strong>uses Uniswap</strong> for its features**.**</p>
</li>
</ol>
<hr>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h3>
<p>This article was an extensive guide to understanding the need for Push Chain, what it offers, and how it benefits the overall web3 ecosystem.</p>
<p>It is quite evident how the above-mentioned concerns with web3 today is a major blocker behind the growth of consumer-centric web3 apps.</p>
<p>With Push Chain, we aim to resolve each of these blockers and provide an infrastructure dedicated to building and supporting top-notch web3 apps with hyper scalability, enhanced user onboarding, better UX with wallet and fee abstraction, and a shared state L1 chain designed to build universal apps with shared app experience.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="next-steps">Next Steps<a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/why-push-chain#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h2>
<ol>
<li><strong>The Governance Proposal for Push Chain is now LIVE</strong> and ****Push community members have the opportunity to vote on the proposal as well as share their views and ask questions below.</li>
<li><strong>Check out the Push Chain Whitepaper</strong> for a detailed overview of the vision and the underlying technicalities.</li>
<li><strong>Visit the <a href="https://push.org/chain" target="_blank" rel="noopener noreferrer">Push Chain Website</a></strong> to find a one-pager explanation of the vision.</li>
<li><a href="https://scan.push.org/" target="_blank" rel="noopener noreferrer">**Push Chain Devnet</a>** is running live on Proof-of-Stake network validators, storage and archival nodes. The network already supports consumer transactions as well. ****</li>
<li><a href="https://simulate.push.org/" target="_blank" rel="noopener noreferrer">**Push Chain Simulate Tx</a> already** provides a way for everyone to send tx from any chain using wallet abstraction.</li>
<li><strong>Visit the Push Ecosystem Page</strong> that provides a list of apps that are already built on top of the Push Chain infra.</li>
</ol>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Push Chain" term="Push Chain"/>
        <category label="Shared App Experience" term="Shared App Experience"/>
        <category label="Any Chain Tx" term="Any Chain Tx"/>
        <category label="Universal Smart Contracts" term="Universal Smart Contracts"/>
        <category label="Shared State Blockchain" term="Shared State Blockchain"/>
        <category label="Consumer Tx" term="Consumer Tx"/>
        <category label="Parallel Validators" term="Parallel Validators"/>
        <category label="Dynamic Sharding" term="Dynamic Sharding"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How Push Enhances Privacy in On-Chain Communications]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications"/>
        <updated>2024-11-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How Push Enhances Privacy in On-Chain Communications]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of How Push Enhances Privacy in On-Chain Communications" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-46e5069477dd11a8d4139816c39aebab.webp" width="1920" height="1080" class="img_ev3q"></p>
<p>While privacy is fundamental to blockchain technology, communicating on-chain poses distinct challenges. Because wallet addresses are public by design, users face risks from unsolicited messages, data mining, and phishing attempts. This challenge requires a secure, private communication layer that preserves the decentralized nature of the blockchain. An effective solution must give users complete control over their data while allowing smooth, private interactions. Push Protocol addresses this need by enhancing privacy in on-chain communications without compromising usability or security.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end-to-end-encryption-ensuring-message-privacy"><strong>End-to-End Encryption: Ensuring Message Privacy</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#end-to-end-encryption-ensuring-message-privacy" class="hash-link" aria-label="Direct link to end-to-end-encryption-ensuring-message-privacy" title="Direct link to end-to-end-encryption-ensuring-message-privacy">​</a></h3>
<p>Push ensures that every message exchanged between users remains private, leveraging robust end-to-end encryption. This encryption ensures that only the sender and recipient can access the content, effectively safeguarding sensitive information from prying eyes.</p>
<p>When users register with Push Chat using their wallet, a unique public-private key pair is generated. This method removes the need for usernames or passwords, ensuring privacy by design. The private key stays securely within the user’s wallet, while the public key allows others to encrypt messages intended for them. For example, when User A sends a message to User B, the message is encrypted with User B's public key, ensuring that only User B—holding the corresponding private key—can decrypt and read it.</p>
<p>This process, powered by asymmetric cryptography, guarantees that no third party can intercept or decipher the communication. By placing security and privacy at the core of its design, Push empowers user privacy, even in a decentralized environment.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pgp-key-security-your-private-key-your-privacy"><strong>PGP Key Security: Your Private Key, Your Privacy</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#pgp-key-security-your-private-key-your-privacy" class="hash-link" aria-label="Direct link to pgp-key-security-your-private-key-your-privacy" title="Direct link to pgp-key-security-your-private-key-your-privacy">​</a></h3>
<p>Push takes a decentralized approach to key management by generating and encrypting PGP keys locally on users' devices. These keys are protected using advanced encryption methods, ensuring only the user can access them. These private keys never leave the user’s control, ensuring that their communication remains secure. This commitment to decentralization ensures that privacy is not a feature to be toggled but a default guarantee for all Push users. Think of it as having your personal safe: only you hold the key, and no one else, not even Push, can open it.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="anonymous-communication-no-personal-information-required"><strong>Anonymous Communication: No Personal Information Required</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#anonymous-communication-no-personal-information-required" class="hash-link" aria-label="Direct link to anonymous-communication-no-personal-information-required" title="Direct link to anonymous-communication-no-personal-information-required">​</a></h3>
<p>Unlike traditional platforms that require personal identifiers like email addresses or phone numbers, Push enables wallet-to-wallet messaging. This innovation allows users to communicate anonymously, relying solely on their Web3 wallets for identity. By removing the need for personal identifiers, Push eliminates the common risks of data breaches and misuse of personal information. This feature not only enhances privacy but also aligns with the principles of pseudonymity and anonymity by offering valuable protections and can be used to enhance privacy and security on the blockchain.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="decentralized-storage-with-ipfs"><strong>Decentralized Storage with IPFS</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#decentralized-storage-with-ipfs" class="hash-link" aria-label="Direct link to decentralized-storage-with-ipfs" title="Direct link to decentralized-storage-with-ipfs">​</a></h3>
<p>Push stores messages securely on the InterPlanetary File System (IPFS), a decentralized storage solution that ensures data integrity and security. Using IPFS, Push ensures that data is distributed across multiple nodes, making it nearly impossible for hackers to tamper with or breach.</p>
<p>Push’s decentralized infrastructure minimizes security risks like data breaches while providing faster access to data and greater resilience. This approach ensures that even if one node fails, user messages remain accessible and secure, offering uninterrupted service.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="spam-prevention-for-better-privacy"><strong>Spam Prevention for Better Privacy</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#spam-prevention-for-better-privacy" class="hash-link" aria-label="Direct link to spam-prevention-for-better-privacy" title="Direct link to spam-prevention-for-better-privacy">​</a></h3>
<p>Spam and unwanted messages can be significant privacy concerns. Push mitigates this with chat requests and opt-in notifications, empowering users to control who can contact them. Chat requests allow users to preview messages before accepting them, while opt-in notifications ensure that only chosen channels can send updates. This spam prevention mechanism ensures that users’ communication remains meaningful and free from unnecessary intrusion.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="privacy-in-nft-and-token-gated-groups"><strong>Privacy in NFT and Token-Gated Groups</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#privacy-in-nft-and-token-gated-groups" class="hash-link" aria-label="Direct link to privacy-in-nft-and-token-gated-groups" title="Direct link to privacy-in-nft-and-token-gated-groups">​</a></h3>
<p>Push goes beyond one-on-one messaging by enabling private group chats for NFT and token holders. Access to these groups is determined by ownership of specific NFTs or tokens, creating exclusive spaces for members. This functionality allows users to participate in exclusive communities without revealing personal information. Whether it’s an NFT club or a DAO working group, Push ensures that privacy is maintained across all interactions.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cross-chain-privacy"><strong>Cross-Chain Privacy</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#cross-chain-privacy" class="hash-link" aria-label="Direct link to cross-chain-privacy" title="Direct link to cross-chain-privacy">​</a></h3>
<p>As Web3 grows increasingly multi-chain, Push ensures seamless and private communication across blockchain networks. This is achieved using advanced encryption and decentralized architecture, ensuring messages remain secure no matter the blockchain. This cross-chain capability fosters decentralized collaboration while upholding privacy principles in diverse ecosystems.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-future-of-onchain-communication"><strong>The Future of Onchain Communication</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/how-push-enhances-privacy-in-on-chain-communications#the-future-of-onchain-communication" class="hash-link" aria-label="Direct link to the-future-of-onchain-communication" title="Direct link to the-future-of-onchain-communication">​</a></h3>
<p>Push is setting new standards for privacy in on-chain communications. With powerful end-to-end encryption, decentralized storage, and anonymous messaging, Push delivers secure communication for all users. As Web3 grows, Push remains dedicated to empowering users with privacy tools that make their experience better.</p>
<p>In a world where data is currency, Push protects what matters most—your privacy.</p>]]></content>
        <author>
            <name>SixtyKeys</name>
            <uri>https://x.com/sixty_keys</uri>
        </author>
        <category label="Technical" term="Technical"/>
        <category label="Push Tech" term="Push Tech"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Push Protocol Monthly Updates - October]]></title>
        <id>https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024</id>
        <link href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024"/>
        <updated>2024-11-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Push Protocol Monthly Updates - October]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="Cover Image of Push Protocol Monthly Updates - October" src="https://push-protocol.github.io/push-website/pr-preview/pr-936/assets/images/cover-image-6ae55e926f07684f8a74fc31883e8de3.webp" width="1600" height="840" class="img_ev3q"></p>
<p>October has been another outstanding month for Push Protocol, showcasing significant advancements across development, integrations, and community engagement. As we move forward, we’re excited to share key highlights from the month that underscore our continued commitment to driving Web3 communication and community growth.</p>
<p>Here’s a recap of our latest updates 👇</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="protocol-milestones"><strong>Protocol Milestones:</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024#protocol-milestones" class="hash-link" aria-label="Direct link to protocol-milestones" title="Direct link to protocol-milestones">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="push-points-program-launch-"><strong>Push Points Program Launch 🚀</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024#push-points-program-launch-" class="hash-link" aria-label="Direct link to push-points-program-launch-" title="Direct link to push-points-program-launch-">​</a></h3>
<p>October saw the launch of the&nbsp;<a href="https://push.org/blog/introducing-the-push-points-program/" target="_blank" rel="noopener noreferrer"><strong>Push Points Program</strong></a>, a reputation-based system designed to reward our community members and reinforce ties with our ecosystem partners. This initiative strengthens user engagement and incentivizes active participation in our ecosystem, adding a new layer of value to our protocol.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="user-growth-and-notification-achievements-"><strong>User Growth and Notification Achievements 📈</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024#user-growth-and-notification-achievements-" class="hash-link" aria-label="Direct link to user-growth-and-notification-achievements-" title="Direct link to user-growth-and-notification-achievements-">​</a></h3>
<p>Push Protocol continues to witness incredible traction:</p>
<ul>
<li><strong>34,094</strong>&nbsp;new subscribers, reaching a total of&nbsp;<strong>279,270 subscribers</strong>.</li>
<li><strong>9.12 million new notifications</strong>&nbsp;were sent, reaching a cumulative&nbsp;<strong>128.59 million</strong>&nbsp;since launch.</li>
<li><strong>40,373 users</strong>&nbsp;are actively engaging in&nbsp;<strong>Push Chat</strong>&nbsp;(+86.9% MoM) with&nbsp;<strong>7,300 active users</strong>.</li>
</ul>
<p>These metrics are a testament to the growing interest in secure, on-chain communication, and we’re excited to bring in even more innovative updates in the coming months.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="development-highlights"><strong>Development Highlights:</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024#development-highlights" class="hash-link" aria-label="Direct link to development-highlights" title="Direct link to development-highlights">​</a></h3>
<p><strong>Push DApp</strong></p>
<ul>
<li><strong>The <a href="https://app.push.org/points" target="_blank" rel="noopener noreferrer">Push Points Program</a></strong>&nbsp;launched.</li>
<li><strong>A new <a href="https://app.push.org/channels?chain=1&amp;category=All" target="_blank" rel="noopener noreferrer">UI</a> for channel listings</strong>&nbsp;and an improved channel dashboard were moved to the review and testing phases.</li>
<li>The&nbsp;<strong>‘Reply to’</strong>&nbsp;feature on Push Chat was released, making interactions more seamless.</li>
<li><strong>In-app notifications, as a feature, was</strong> sent to the testing phase.</li>
<li>Several&nbsp;<strong>UI enhancements and fixes</strong>&nbsp;were completed, further refining the user experience.</li>
</ul>
<p><strong>Mobile App</strong></p>
<ul>
<li>An&nbsp;<strong>Android-optimized version was released to</strong> improve accessibility.</li>
<li>A new engineer was onboarded to the team to drive further mobile app enhancements.</li>
</ul>
<p><strong>Website Updates</strong></p>
<ul>
<li>We published comprehensive&nbsp;<strong>Push Points Program <a href="https://push.org/docs/rewards/" target="_blank" rel="noopener noreferrer">documentation</a></strong>.</li>
<li>We released several blog posts on topics like&nbsp;<a href="https://push.org/blog/introducing-the-push-points-program/" target="_blank" rel="noopener noreferrer">**Push Points</a>, <a href="https://push.org/blog/abstracting-chains-for-better-dapp-ux/" target="_blank" rel="noopener noreferrer">CCR Features</a>**, <a href="https://push.org/blog/what-is-decentralized-social-media/" target="_blank" rel="noopener noreferrer">decentralized social media</a>, and <a href="https://push.org/blog/" target="_blank" rel="noopener noreferrer">consumer crypto themes</a>, contributed by community members.</li>
<li>We enhanced review and testing with the deploy preview functionality and migrated the production build from Vercel to the GitHub pages for improved efficiency.</li>
</ul>
<p><strong>SDK &amp; Backend Updates</strong></p>
<ul>
<li><strong>The chat Reply Feature</strong>&nbsp;implementation was completed and sent to testing.</li>
<li>We updated the&nbsp;<strong>notification card UI</strong>&nbsp;and finished priority bug fixes.</li>
<li>Backend improvements for&nbsp;<strong>scalability and stability</strong>&nbsp;were made to accommodate higher traffic, with horizontal scaling and new project integrations.</li>
</ul>
<p><strong>Smart Contract Developments</strong></p>
<ul>
<li>We completed testing, scripts, and changes to the&nbsp;<strong>Rust Smart Contract</strong>.</li>
<li><strong>Push Core V3</strong>&nbsp;underwent its first implementation and review.</li>
<li>We progressed with the&nbsp;<strong>CCR development</strong>&nbsp;with mainnet preparations and conducted audits on&nbsp;<strong>Cairo contracts</strong>&nbsp;to ensure robust security.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ecosystem-growth"><strong>Ecosystem Growth</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024#ecosystem-growth" class="hash-link" aria-label="Direct link to ecosystem-growth" title="Direct link to ecosystem-growth">​</a></h3>
<p>November saw major ecosystem updates in this sphere, with exciting integrations and partnerships that amplify our protocol’s reach:</p>
<p><strong>Integration Milestones</strong></p>
<ul>
<li><a href="https://app.push.org/channels/0x65bB67c2416186aE3107F7c2C6728b272a579e3d" target="_blank" rel="noopener noreferrer"><strong>Revoke Cash</strong></a>&nbsp;now sends real-time alerts for token approvals, ensuring users have timely prompts to revoke approvals as needed.</li>
<li><a href="https://app.push.org/channels/0xf1A1542Ca902AE861B59bffE77D92E8CD76146f1" target="_blank" rel="noopener noreferrer"><strong>HyperLiquid</strong></a>&nbsp;integrated&nbsp;<strong>Push notifications</strong>&nbsp;to offer real-time updates on liquidations and position changes.</li>
<li><a href="https://x.com/pushprotocol/status/1846784886457184359" target="_blank" rel="noopener noreferrer">DePerp Labs</a> integrated Push Chat making the DePerp experience far richer than ever before.</li>
<li><a href="https://x.com/unstoppableweb/status/1839653386339107064" target="_blank" rel="noopener noreferrer"><strong>Unstoppable Domains</strong></a>&nbsp;(UD) wallet now supports&nbsp;<strong>end-to-end encrypted messaging</strong>&nbsp;between domain owners, leveraging Push for more secure communication.</li>
<li>Contributors at Cartesi created an <a href="https://push.org/blog/how-developers-can-integrate-cartesi-and-push-protocol/" target="_blank" rel="noopener noreferrer">integration template</a> for developers to leverage web3 notifications for Cartesi DApps enabling DApps built on Cartesi to integrate Push’s notification services within 5 minutes or less.</li>
<li><a href="https://news.fuse.io/fuse-partners-with-push-protocol-to-enhance-communication-for-web3-dapps/" target="_blank" rel="noopener noreferrer">Fuse Network</a> kicked off their partnership with Push for enabling wallet-to-wallet messaging in addition to structuring and launching Push notifications for applications built on Fuse.</li>
</ul>
<p><strong>Push Points Partner Collaborations</strong></p>
<p>Push Points rolled out collaborations with&nbsp;<a href="https://app.push.org/channels/0xf198eBCc8dB86F707bAdDdBa236aB5b619c59D3c" target="_blank" rel="noopener noreferrer">**QuickSwap</a>, <a href="https://app.push.org/channels/0x90A48D5CF7343B08dA12E067680B4C6dbfE551Be" target="_blank" rel="noopener noreferrer">ShapeShift</a>, <a href="https://app.push.org/channels/0xBc28359C93cA00A5724fe398606f27e43007C22D" target="_blank" rel="noopener noreferrer">Cyber</a>, <a href="https://app.push.org/channels/0x991552E1C2A96D0Ae72E19552b08A1889aebCF53" target="_blank" rel="noopener noreferrer">PWN</a>, <a href="https://app.push.org/channels/0x65bB67c2416186aE3107F7c2C6728b272a579e3d" target="_blank" rel="noopener noreferrer">Revoke Cash</a>,**&nbsp;and&nbsp;<a href="https://app.push.org/channels/0xdbBc2Ac8cb8D02B26F165b4BC120fd4b14DA6cDA" target="_blank" rel="noopener noreferrer"><strong>Unstoppable Domains</strong></a>&nbsp;to bring Push Points to life and ensure that it scales as a program.</p>
<p><strong>Channel Growth Highlights</strong></p>
<ul>
<li><a href="https://app.push.org/channels/0x983110309620D911731Ac0932219af06091b6744" target="_blank" rel="noopener noreferrer"><strong>ENS Domains</strong></a>&nbsp;achieved a new milestone with&nbsp;<strong>7,500+ subscribers</strong>.</li>
<li><a href="https://app.push.org/channels/0xf198eBCc8dB86F707bAdDdBa236aB5b619c59D3c" target="_blank" rel="noopener noreferrer"><strong>QuickSwap</strong></a>&nbsp;saw rapid growth, surpassing&nbsp;<strong>1,500 subscribers</strong>.</li>
<li><a href="https://app.push.org/channels/0x90A48D5CF7343B08dA12E067680B4C6dbfE551Be" target="_blank" rel="noopener noreferrer">Shapeshift</a> and <a href="https://app.push.org/channels/0x57cD6665e725232123F5250328E35Db6ABf6d80C" target="_blank" rel="noopener noreferrer">Rekt</a> also hit major milestones of 30,000+ subscribers and 2,100+ subscribers respectively.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dao-updates"><strong>DAO Updates</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024#dao-updates" class="hash-link" aria-label="Direct link to dao-updates" title="Direct link to dao-updates">​</a></h3>
<p>Push Protocol’s DAO initiatives reflect our dedication to community-driven growth and strategic transparency:</p>
<p><strong>Strategic and Operational Developments</strong></p>
<ul>
<li><strong>Push Grants</strong>&nbsp;saw an all-time high in applications, with <a href="https://app.charmverse.io/push-dao/proposals?viewId=all" target="_blank" rel="noopener noreferrer">over 30 inbound applications.</a></li>
<li>We secured 5 soft commitments for 2025’s app-focused Push Grants program.</li>
<li>We increased the contributor base by&nbsp;<strong>8x</strong>&nbsp;since March 2024.</li>
</ul>
<p><strong>Governance &amp; Transparency</strong></p>
<ul>
<li>We published the DAO’s <a href="https://gov.push.org/t/push-dao-2024-q3-transparency-report/1945" target="_blank" rel="noopener noreferrer">first quarterly&nbsp;<strong>transparency report</strong>.</a></li>
<li>We passed a&nbsp;<strong>Sybil resistance</strong>&nbsp;upgrade proposal, strengthening DAO governance.</li>
<li>We began establishing a strategic framework for 2025, some of which has already begun to show <a href="https://gov.push.org/" target="_blank" rel="noopener noreferrer">in proposals on the forum</a>.</li>
</ul>
<p><strong>Community Initiatives</strong></p>
<ul>
<li>We partnered with&nbsp;<strong>Unstoppable Domains</strong>&nbsp;as a Push Points partner.</li>
<li>We architected the strategy and sourced the tooling needed for the launch of the&nbsp;<strong>PushCast podcast</strong>&nbsp;(launching in November).</li>
<li>We supported two Devcon attendees through our&nbsp;<a href="https://devcon.org/en/" target="_blank" rel="noopener noreferrer">**Devcon</a> Scholar Initiative**.</li>
<li>We began developing more transparent contributor pathways for 2025, showcasing how contributors can grow within the ecosystem. As with all Push DAO strategy changes for 2025, we’ll share the frameworks publicly in their final form, in December.</li>
</ul>
<p><strong>Workshops and Events</strong></p>
<p>Our commitment to Web3 education and ecosystem expansion continued through November with several events and speaking engagements:</p>
<p><strong>Major Events &amp; Sponsorships</strong></p>
<ul>
<li>We sponsored the&nbsp;<a href="https://x.com/pushprotocol/status/1842082904999903367" target="_blank" rel="noopener noreferrer">Invisible Gardens</a> camp&nbsp;in Chiang Mai, Thailand, showcasing how to build consumer-ready apps with Push Protocol SDKs.</li>
<li>Harsh Rajat represented Push on a panel at&nbsp;<a href="https://www.binanceblockchainweek.com/event/b7fbe2af-9ab6-4bb2-b78b-486c4d1fa80f/websitePage:9ec1ee53-cbdd-4234-8f04-fb70d6f7ad2e" target="_blank" rel="noopener noreferrer"><strong>Binance Blockchain Week</strong></a>&nbsp;in Dubai.</li>
</ul>
<p><strong>Community Education &amp; Developer Evangelism</strong></p>
<ul>
<li>We conducted an&nbsp;<a href="https://www.youtube.com/watch?v=60t101ro2uM" target="_blank" rel="noopener noreferrer"><strong>Ekolance Workshop</strong></a>, a grantee-hosted session on building Web3 DApps with Push tech.</li>
<li>Our DAO Lead, Ian LeViness, participated in a&nbsp;<a href="https://x.com/pushprotocol/status/1849401395147055525" target="_blank" rel="noopener noreferrer"><strong>SocialFi panel</strong></a>&nbsp;on X alongside partners such as&nbsp;<strong>Conflux</strong>&nbsp;and&nbsp;<strong>Unstoppable Domains</strong>.</li>
<li>Ian also represented the ecosystem on several podcasts, including&nbsp;<a href="https://www.youtube.com/watch?v=Mc_wp_4zNvQ&amp;list=PLu0fIscp1uLKza4WMSCl76C5VdK9l0Tll&amp;index=49" target="_blank" rel="noopener noreferrer">**The Silicon Dreams</a> Podcast**&nbsp;and&nbsp;<a href="https://www.youtube.com/watch?v=Ysy-jV0tiUU" target="_blank" rel="noopener noreferrer">**Jax Dwyer’s</a> Podcast**, promoting Push’s vision and community.</li>
<li>We also booked several more podcast appearances for November and December, which will be included in the following reports.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="looking-ahead"><strong>Looking Ahead</strong><a href="https://push-protocol.github.io/push-website/pr-preview/pr-936/blog/monthly-recap-october-2024#looking-ahead" class="hash-link" aria-label="Direct link to looking-ahead" title="Direct link to looking-ahead">​</a></h3>
<p>With many exciting updates on our <a href="https://push.org/docs/roadmap/" target="_blank" rel="noopener noreferrer">roadmap</a>, we’re thrilled to push the boundaries of Web3 communication as we approach the new year. Stay tuned for December updates as we continue to innovate and enhance our ecosystem. Your support drives us forward!</p>
<p>Let’s keep pushing! 🌍🚀</p>]]></content>
        <author>
            <name>Push Protocol</name>
            <uri>https://twitter.com/pushprotocol</uri>
        </author>
        <category label="Updates" term="Updates"/>
        <category label="Announcements" term="Announcements"/>
        <category label="Community & Ecosystem" term="Community & Ecosystem"/>
    </entry>
</feed>